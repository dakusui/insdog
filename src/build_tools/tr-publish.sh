#!/usr/bin/env bash

## tr-publish.sh
##
## A script to upload `testReport.xml`, which is generated by `tr-processor` to a TestRail instance.
## In order to run this script, you first need to source `env.rc`. (Do `. env.rc` (bash) or `source env.rc` (zsh)) in the
## project root directory.
##
## See also: tr-processor.sh
##
## Usage:
##   tr-publish.sh <testReportXmlFilename> <title> <runDescription>
##
##   testReportXmlFilename: An XML file that contains JUnit compliant report file of a test run. Generated by tr-processor.sh
##   title:                 A title of the test run. Defaults to "unknown".
##   runDescription:        A description of the test run. Defaults to "None".
##
## Naming Conventions in this script:
## - ENVIRONMENT_VARIABLE
## - _CONSTANT
## - function_name()
## - _private_function_name()  (A function used only by another, introduced merely for readability)
## - global_variable
## - _local_variable

set -E -o nounset -o errexit +o posix -o pipefail
shopt -s inherit_errexit

function abort() {
  message "${@}"
  exit 1
}

function message() {
  echo "${@}" >&2
}
export -f message

function exec_trcli() {
  local _report_file="${1}" _title="${2}" _run_description="${3}"
  trcli -y -h "$(tr_url)"    \
    --project "$(tr_project)"   \
    -u "$(tr_username)"  \
    -p "$(tr_password)"   \
    parse_junit   \
    -f "${_report_file}" \
    --title "${_title}"   \
    --run-description "${_run_description}"
}

function perform() {
  local _report_file="${1}" _title="${2}" _run_description=${3}

  function tr_project() {
    echo "autotest-ca"
  }

  function tr_suite_name() {
    echo "UT-2"
  }
  exec_trcli "${_report_file}" "${_title}" "${_run_description}"
}

function main() {
  local _report_file="${1}" _title="${2:-unknown}" _run_description="${3:-None}"
  perform "${_report_file}" "${_title}" "${_run_description}"
}

main "${@}"