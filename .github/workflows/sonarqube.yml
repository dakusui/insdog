name: SonarQube Data Collection

on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop
    types:
      - closed
      - opened
      - reopened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: mcr.microsoft.com/playwright/java:v1.45.1-jammy

    steps:
      - name: Export environment variables
        run: |
          echo "JAVA_TOOL_OPTIONS=\"-Duser.home=${HOME}\"" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y \
            git make \
            fonts-ipafont-gothic fonts-ipafont-mincho \
            libasound2-dev libc-dev-bin libc-devtools libc6-dev libcrypt-dev \
            libgd3 libjpeg-turbo8-dev libjpeg8-dev libnsl-dev libtirpc-dev \
            linux-libc-dev manpages manpages-dev rpcsvc-proto liba52-0.7.4 \
            libgraphene-1.0-0 libmpeg2-4 libopencore-amrnb0 libopencore-amrwb0 \
            libsidplay1v5

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          envsubst --allow GH_USERNAME,GH_PAT < ./.github/m2_settings.template.xml > ~/.m2/settings.xml
        env:
          GH_USERNAME: ${{ github.actor }}
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'  # AdoptOpenJDK is now Eclipse Temurin
          java-version: '21'
          cache: 'maven'
          overwrite-settings: false

      - name: Pull secret file
        run: |
          git config --global --add safe.directory "${GITHUB_WORKSPACE}"
          make pull-secrets
          make print-secrets >> "$GITHUB_ENV"

      - name: Build and Verify autotest-ca
        run: mvn -B -Dmaven.javadoc.skip=true verify

      - name: Run SonarQube scanner
        uses: sonarsource/sonarqube-scan-action@master
        with:
           # Check [1] for more details.
           # https://docs.sonarsource.com/sonarqube/latest/project-administration/analysis-scope/#example-1
           args: >
             -Dsonar.projectKey=autotest-ca
             -Dsonar.projectName=autotest-ca
             -Dsonar.scm.provider=git
             -Dsonar.java.sources=framework/src/main/java,ca_web/src/main/java
             -Dsonar.java.tests=framework/src/test/java,ca_web/src/test/java
             -Dsonar.java.binaries=framework/target/classes,ca_web/target/classes
             -Dsonar.coverage.jacoco.xmlReportPaths=framework/target/site/jacoco/framework/jacoco.xml,framework/target/site/jacoco/all/jacoco.xml,ca_web/target/site/jacoco/caweb/jacoco.xml
             -Dsonar.sources=framework/src/main/java,ca_web/src/main/java
             -Dsonar.tests=framework/src/test/java,ca_web/src/test/java
             -Dsonar.exclusions=framework/src/**/tests/**,framework/src/**/examples/**,ca_web/src/**/tests/**,ca_web/src/**/examples/**,
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  comment:
    needs: [build]

    if: ${{ github.event_name == 'pull_request' && contains(fromJSON('["opened", "synchronize"]'), github.event.action) }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Comment
        env:
          PR_NUMBER: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "[View SonarQube](${SONAR_HOST_URL}/dashboard?id=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}&pullRequest=${PR_NUMBER})" > /tmp/comment
          gh pr comment "${PR_NUMBER}" -F /tmp/comment --edit-last || gh pr comment "${PR_NUMBER}" -F /tmp/comment
