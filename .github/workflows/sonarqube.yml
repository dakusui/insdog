name: SonarQube Data Collection

on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop
    types:
      - closed
      - opened
      - reopened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: mcr.microsoft.com/playwright/java:v1.45.1-jammy

    steps:
      - name: Install Git
        run: apt-get update && apt-get install -y git

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-playwright-container
        with:
          require-m2-settings: 'true'
          gh_pat: ${{ secrets.GH_PAT }}

      - name: Build and Verify autotest-ca
        run: mvn -B -Dmaven.javadoc.skip=true verify

      - name: Run SonarQube scanner
        uses: sonarsource/sonarqube-scan-action@master
        with:
           # Check [1] for more details.
           # https://docs.sonarsource.com/sonarqube/latest/project-administration/analysis-scope/#example-1
           args: >
             -Dsonar.projectKey=autotest-ca
             -Dsonar.projectName=autotest-ca
             -Dsonar.scm.provider=git
             -Dsonar.java.sources=framework/src/main/java,ca_web/src/main/java
             -Dsonar.java.tests=framework/src/test/java,ca_web/src/test/java
             -Dsonar.java.binaries=framework/target/classes,ca_web/target/classes
             -Dsonar.coverage.jacoco.xmlReportPaths=framework/target/site/jacoco/framework/jacoco.xml,framework/target/site/jacoco/all/jacoco.xml,ca_web/target/site/jacoco/caweb/jacoco.xml
             -Dsonar.sources=framework/src/main/java,ca_web/src/main/java
             -Dsonar.tests=framework/src/test/java,ca_web/src/test/java
             -Dsonar.exclusions=framework/src/**/tests/**,framework/src/**/examples/**,ca_web/src/**/tests/**,ca_web/src/**/examples/**,
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  comment:
    needs: [build]

    if: ${{ github.event_name == 'pull_request' && contains(fromJSON('["opened", "synchronize"]'), github.event.action) }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Comment
        env:
          PR_NUMBER: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "[View SonarQube](${SONAR_HOST_URL}/dashboard?id=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}&pullRequest=${PR_NUMBER})" > /tmp/comment
          gh pr comment "${PR_NUMBER}" -F /tmp/comment --edit-last || gh pr comment "${PR_NUMBER}" -F /tmp/comment
